// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.6.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';


            

            Future<RsaKeyPair> generateRsaKeyPair() => RustLib.instance.api.crateApiCryptotranGenerateRsaKeyPair();

Future<void> writePemFile({required String path , required String pem }) => RustLib.instance.api.crateApiCryptotranWritePemFile(path: path, pem: pem);

Future<Uint8List> generateSymmetricKey() => RustLib.instance.api.crateApiCryptotranGenerateSymmetricKey();

Future<(Uint8List,Uint8List)> encrypt({required String plainText , required List<int> key }) => RustLib.instance.api.crateApiCryptotranEncrypt(plainText: plainText, key: key);

Future<String> decrypt({required List<int> encryptedData , required List<int> key , required List<int> iv }) => RustLib.instance.api.crateApiCryptotranDecrypt(encryptedData: encryptedData, key: key, iv: iv);

            class RsaKeyPair  {
                final String privateKeyPem;
final String publicKeyPem;

                const RsaKeyPair({required this.privateKeyPem ,required this.publicKeyPem ,});

                
                

                
        @override
        int get hashCode => privateKeyPem.hashCode^publicKeyPem.hashCode;
        

                
        @override
        bool operator ==(Object other) =>
            identical(this, other) ||
            other is RsaKeyPair &&
                runtimeType == other.runtimeType
                && privateKeyPem == other.privateKeyPem&& publicKeyPem == other.publicKeyPem;
        
            }
            